@model List<bakerymanagement.Models.Product>

@{
    ViewData["Title"] = "Bakery Inventory";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Ensure you have a layout file
}

<h1 class="text-center">Bakery Inventory</h1>

<div class="inventory-container">
    <div class="product-grid">
        @foreach (var item in Model)
        {
            <div class="product-card">
                <h3>@item.ProductName</h3>
                <p><strong>Quantity:</strong> <span id="quantity-@item.ProductId">@item.Quantity</span></p>
            </div>
        }
    </div>

    <div class="button-group">
        <button onclick="location.href='@Url.Action("UpdateInventory", "Home")'">Update Inventory</button>
        <button onclick="location.href='@Url.Action("Transactions", "Home")'">View Transactions</button>
    </div>
</div>

@section Styles {
    <style>
        .inventory-container {
            width: 80%;
            margin: 0 auto;
        }
        .product-grid {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-around;
        }
        .product-card {
            border: 1px solid #ccc;
            border-radius: 8px;
            padding: 16px;
            width: 200px;
            margin: 10px;
            text-align: center;
            background-color: #f9f9f9;
        }
        .button-group {
            margin-top: 20px;
            text-align: center;
        }
        .button-group button {
            margin: 5px;
            padding: 10px 20px;
        }
    </style>
}

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script>
        // SignalR code to receive real-time updates
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/inventoryHub")
            .build();

        connection.on("UpdateInventory", function (productId, quantity) {
            document.getElementById("quantity-" + productId).innerText = quantity;
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
    </script>
}
